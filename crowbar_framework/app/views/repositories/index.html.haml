.row
  .col-xs-12
    %h1.page-header
      = t(".title")
    .alert.alert-info
      = t(".refresh_hint")

- @repos_groups.each_with_index do |repos_group, index|
  - platform = repos_group[:platform]
  - arch = repos_group[:arch]
  - repos = repos_group[:repos]
  = form_for :repository, url: sync_repositories_path, html: { role: "form" } do |f|
    .panel.panel-default
      .panel-heading
        %h2
          = "#{pretty_target_platform(platform)} (#{arch})"

      %table.table.table-hover.table-middle.table-bordered
        %thead
          %tr
            %th.col-xs-5
              = t(".name")
            %th.col-xs-2
              = t(".required")
            %th.col-xs-2
              = t(".status")
            %th.col-xs-2
              = t(".check")
            %th.col-xs-1
              %input{ type: "checkbox", value: "all", data: { checkall: "input.platform#{index}" } }
                = t(".active")
              .pull-right
                = icon_tag :question_circle, nil, data: { tooltip: true, placement: "top" }, title: t(".active_repo_tooltip")

          %tbody
          - repos.each do |repo|
            %tr
            - if repo.exist?
              %td
                = link_to(repo.name, repo.url)
              %td
                = repo.required
              - if repo.stale?
                %td.warning
                  = icon_tag :refresh
                  = t(".stale")
              - else
                %td.success
                  = icon_tag :ok
                  = t(".available")
            - else
              %td
                .span.text-muted
                  = repo.name
              %td
                .text-muted
                  = repo.required
              - if repo.required == "mandatory"
                %td{ class: repository_availability(repo.required) }
                  = icon_tag :remove
                  = t(".unavailable")
              - else
                %td{ class: repository_availability(repo.required) }
                  .text-muted
                    = t(".unavailable")

            - if !repo.exist?
              %td{ class: repository_availability(repo.required) }
                .text-muted
                  = t(".unavailable")
              %td
                = check_box "repo[#{platform}][#{arch}]", repo.id, { class: "platform#{index}", checked: false, disabled: true }
            - elsif repo.remote?
              %td.success
                = icon_tag :ok
                = t(".check_remote")
              %td
                = check_box "repo[#{platform}][#{arch}]", repo.id, { class: "platform#{index}", checked: repo.active? }
            - elsif !repo.valid_repo?
              %td{ class: repository_availability(repo.required) }
                = icon_tag :remove
                = t(".check_failed_tag")
              %td
                = check_box "repo[#{platform}][#{arch}]", repo.id, { class: "platform#{index}", checked: false, disabled: true }
            - elsif !repo.valid_key_file?
              %td{ class: repository_availability(repo.required) }
                = icon_tag :remove
                = t('.check_failed_fingerprint')
              %td
                = check_box "repo[#{platform}][#{arch}]", repo.id, { class: "platform#{index}", checked: false, disabled: true }
            - else
              %td.success
                = icon_tag :ok
                = t(".check_ok")
              %td
                = check_box "repo[#{platform}][#{arch}]", repo.id, { class: "platform#{index}", checked: repo.active? }

      .panel-footer.text-right
        .btn-group
          %input.btn.btn-default{ type: "submit", name: "submit", value: "Save" }
