#!/bin/bash
#
# This script starts the upgrade of the node server to the latest version of
# system and Cloud product.

LOGFILE=/var/log/crowbar/node-upgrade.log
mkdir -p "`dirname "$LOGFILE"`"
exec >>"$LOGFILE" 2>&1

log()
{
    set +x
    echo "[$(date --iso-8601=ns)] [$$] $@"
    set -x
}

log "Executing $BASH_SOURCE"

set -x

UPGRADEDIR=/var/lib/crowbar/upgrade
RUNDIR=/var/run/crowbar
RUNFILE=$RUNDIR/node-upgrading

mkdir -p $UPGRADEDIR
mkdir -p $RUNDIR

rm -f $UPGRADEDIR/crowbar-upgrade-os-failed

cleanup()
{
    log "Cleaning up after interrupt or exit"

    # cleanup upgrading indication so that the action can be restarted
    rm -f $RUNFILE

    exit 2
}

# check if a .rpmnew file exists and use that
function default_package_config()
{
    local config_file=$1
    if [ -f "${config_file}" ]; then
        # does the rpmnew file also exists?
        if [ -f "${config_file}.rpmnew" ]; then
            mv "${config_file}.rpmnew" "${config_file}"
            log "Moved ${config_file}.rpmnew to ${config_file}"
        fi
    fi
}

initiate_node_upgrade()
{
    if [[ -f $RUNFILE ]] ; then
        log "Exit: Upgrade is already running..."
        exit 1
    fi

    if [[ -f $UPGRADEDIR/crowbar-upgrade-os-ok ]] && grep -q "<%= @target_platform_version %>" $UPGRADEDIR/crowbar-upgrade-os-ok ; then
        log "Exit: Node already upgraded"
        exit 0
    fi

    # Signalize that the upgrade is running
    touch $RUNFILE

    trap cleanup INT EXIT

    # we need to change the horizon django NullHandler in the custom conf files as its been
    # deprecated so horizon related packages wont be able to install correctly, as they run some
    # manage.py commands, which loads the conf files and errors out
    # only needed from soc7 -> soc8
    horizon_custom_config="/srv/www/openstack-dashboard/openstack_dashboard/local/local_settings.d/_100_local_settings.py"
    if [[ -f $horizon_custom_config ]] ; then
      sed -i s/django.utils.log.NullHandler/logging.NullHandler/g $horizon_custom_config
    fi

    # Upgrade the distribution non-interactively
    log "Executing zypper ref"
    zypper --no-color --releasever <%= @target_platform_version %> ref -f
    log "Executing zypper dist-upgrade"
    zypper --no-color --non-interactive dist-upgrade -l --recommends --replacefiles
    ret=$?
    if [ $ret != 0 ]; then
        log "zypper dist-upgrade has failed with $ret, check zypper logs"
        echo "$ret" > $UPGRADEDIR/crowbar-upgrade-os-failed
        exit $ret
    fi

    # move the openstack configurations after the upgrade. We want the default
    # configs from the packages because Crowbar now uses config snippets in the
    # conf.d/ dirs
    local config_files=" \
          /etc/aodh/aodh.conf \
          /etc/barbican/barbican.conf \
          /etc/ceilometer/ceilometer.conf \
          /etc/cinder/cinder.conf \
          /etc/designate/designate.conf \
          /etc/glance/glance.conf \
          /etc/glance/glance-api.conf \
          /etc/glance/glance-cache.conf \
          /etc/glance/glance-glare.conf \
          /etc/glance/glance-registry.conf \
          /etc/glance/glance-scrubber.conf \
          /etc/glance/glance-swift.conf \
          /etc/gnocchi/gnocchi.conf \
          /etc/heat/heat.conf \
          /etc/ironic/ironic.conf \
          /etc/keystone/keystone.conf \
          /etc/magnum/magnum.conf \
          /etc/manila/manila.conf \
          /etc/murano/murano.conf \
          /etc/neutron/neutron.conf \
          /etc/neutron/dhcp_agent.ini \
          /etc/neutron/fwaas_driver.ini \
          /etc/neutron/l3_agent.ini \
          /etc/neutron/lbaas_agent.ini \
          /etc/neutron/metadata_agent.ini \
          /etc/neutron/neutron_lbaas.conf \
          /etc/neutron/services_lbaas.conf \
          /etc/nova/nova.conf \
          /etc/octavia/octavia.conf \
          /etc/sahara/sahara.conf \
          /etc/swift/swift.conf \
          /etc/swift/account-server.conf \
          /etc/swift/dispersion.conf \
          /etc/swift/proxy-server.conf \
          /etc/trove/trove.conf \
          /etc/trove/trove-conductor.conf \
          /etc/trove/trove-taskmanager.conf
"
    for c in $config_files; do
        default_package_config $c
    done

    # Remove possibly existing temporary config files from the compute nodes
    rm -f /etc/nova/nova.conf.d/200-crowbar-upgrade.conf
    rm -f /etc/neutron/neutron-openvswitch-agent.conf.d/200-crowbar-upgrade.conf

    # Signalize that the upgrade correctly ended
    echo "<%= @target_platform_version %>" >> $UPGRADEDIR/crowbar-upgrade-os-ok

    log "$BASH_SOURCE is finished."
    exit 0
}

# this detaches the process from crowbar and hooks it directly to init
initiate_node_upgrade &
